name: ci

on:
  pull_request:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  nix-fmt-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
        env:
          NIX_FIRST_BUILD_UID: 400
      - uses: cachix/cachix-action@v12
        with:
          name: fuellabs
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix fmt -- --check ./

  nix-build:
    strategy:
      fail-fast: false
      matrix:
        package:
          [
            fuel,
            fuel-testnet,
            fuel-ignition,
            fuel-mainnet,
            fuel-nightly,
            sway-vim,
          ]
        os: [ubuntu-latest, macos-latest, macos-latest-xlarge]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
        env:
          NIX_FIRST_BUILD_UID: 400
      - uses: cachix/cachix-action@v12
        with:
          name: fuellabs
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix build --print-build-logs --no-update-lock-file .#${{ matrix.package }}

  verify-nix-shell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
        env:
          NIX_FIRST_BUILD_UID: 400
      - uses: cachix/cachix-action@v12
        with:
          name: fuellabs
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Verify nix shell command from docs
        run: |
          nix shell .#fuel-testnet --command bash -c '
            set -e
            echo "Checking fuel-core version..."
            fuel-core --version
            echo "Checking forc version..."
            forc --version
          '

  nix-develop:
    needs: nix-build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, macos-latest-xlarge]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
        env:
          NIX_FIRST_BUILD_UID: 400
      - uses: cachix/cachix-action@v12
        with:
          name: fuellabs
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix develop --print-build-logs --no-update-lock-file .#fuel-dev

  nix-build-book:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
        env:
          NIX_FIRST_BUILD_UID: 400
      - uses: cachix/cachix-action@v12
        with:
          name: fuellabs
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix develop --print-build-logs --no-update-lock-file .#book-dev --command mdbook build book

  notify-slack-on-failure:
    if: failure() && github.ref == 'refs/heads/master'
    needs:
      [
        nix-fmt-check,
        nix-build,
        nix-develop,
        nix-build-book,
        verify-nix-shell
      ]
    runs-on: ubuntu-latest
    steps:
      - uses: ravsamhq/notify-slack-action@v1
        with:
          status: "failure"
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: "{workflow} has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}> : <{run_url}|View Run Results>"
          footer: ""
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_TOOLING }}    
