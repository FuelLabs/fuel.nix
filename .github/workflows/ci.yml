name: ci

on:
  pull_request:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  nix-fmt-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          name: fuellabs
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix fmt -- --check ./

  nix-build:
    strategy:
      fail-fast: false
      matrix:
        package:
          [
            fuel,
            fuel-beta-1,
            fuel-beta-2,
            fuel-beta-3,
            fuel-beta-4-rc,
            fuel-nightly,
            sway-vim,
          ]
        os: [ubuntu-latest, macos-latest, macos-arm]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2.4.0
      # Since the self-hosted runners already have nix and cachix installed, we skip these steps.
      - if: matrix.os != 'macos-arm'
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - if: matrix.os != 'macos-arm'
        uses: cachix/cachix-action@v12
        with:
          name: fuellabs
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      # Copy the nix store to a tmp directory for later comparison.
      - if: matrix.os == 'macos-arm'
        run: ./script/list-nix-store.sh > /tmp/store-path-pre-build
      - run: nix build --print-build-logs --no-update-lock-file .#${{ matrix.package }}
      # Since we skipped the cachix action, we must manually update the cachix cache.
      - if: matrix.os == 'macos-arm'
        env:
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}
        run: ./script/cachix-push-paths.sh

  nix-develop:
    needs: nix-build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, macos-arm]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2.4.0
      - if: matrix.os != 'macos-arm'
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - if: matrix.os != 'macos-arm'
        uses: cachix/cachix-action@v12
        with:
          name: fuellabs
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix develop --print-build-logs --no-update-lock-file .#fuel-dev

  nix-build-book:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          name: fuellabs
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix develop --print-build-logs --no-update-lock-file .#book-dev --command mdbook build book
