name: "refresh-manifests"

on:
  schedule:
    - cron: '0 0 * * *' # Midnight UTC
  workflow_dispatch:

jobs:
  refresh-and-upload-manifests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          name: fuellabs
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix run .#refresh-manifests
        timeout-minutes: 120
      - name: validate changed nix files
        run: |
          files=( $(git diff --name-only '*.nix') )
          echo "${#files[*]} nix files changed: ${files[*]}"
          if [[ "${#files[*]}" -ne 0 ]]; then
            nix-instantiate --parse "${files[@]}" >/dev/null
          fi
      - uses: actions/upload-artifact@v3
        with:
          name: manifests
          path: manifests/

  download-manifests-and-nix-build:
    needs: refresh-and-upload-manifests
    strategy:
      fail-fast: false
      matrix:
        package: [fuel, fuel-beta-4, fuel-beta-5, fuel-nightly]
        os: [ubuntu-latest, macos-latest, macos-latest-xlarge]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - run: rm -r manifests
      - uses: actions/download-artifact@v3
        with:
          name: manifests
          path: manifests/
      - name: stage manifests for nix build
        run: git add -v manifests
      - uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          name: fuellabs
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix build --print-build-logs --no-update-lock-file .#${{ matrix.package }}

  download-manifests-and-commit:
    needs: [refresh-and-upload-manifests, download-manifests-and-nix-build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          ref: master
      - run: rm -r ./manifests
      - uses: actions/download-artifact@v3
        with:
          name: manifests
          path: manifests/
      - name: Check and commit changes
        run: |
          git add manifests
          git commit -m "manifest: update"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.REPO_TOKEN }}
          branch: master

  notify-slack-on-failure:
    if: failure()
    needs:
      [
        refresh-and-upload-manifests,
        download-manifests-and-nix-build,
        download-manifests-and-commit,
      ]
    runs-on: ubuntu-latest
    steps:
      - uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: "{workflow} has {status_message}"
          message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}> : <{run_url}|View Run Results>"
          footer: ""
          notify_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_TOOLING }}    
